/*
 * generated by Xtext 2.11.0
 */
package org.xtext.example.fsm.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class FSMGrammarAccess extends AbstractGrammarElementFinder {
	
	public class FSMElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.fsm.FSM.FSM");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cFSMAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cFSMKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cOwnedStateKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cOwnedStateAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cOwnedStateStateParserRuleCall_3_2_0 = (RuleCall)cOwnedStateAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cOwnedStateAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cOwnedStateStateParserRuleCall_3_3_1_0 = (RuleCall)cOwnedStateAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//FSM:
		//	{FSM}
		//	'FSM'
		//	'{' ('ownedState' '{' ownedState+=State ("," ownedState+=State)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{FSM} 'FSM' '{' ('ownedState' '{' ownedState+=State ("," ownedState+=State)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//{FSM}
		public Action getFSMAction_0() { return cFSMAction_0; }
		
		//'FSM'
		public Keyword getFSMKeyword_1() { return cFSMKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('ownedState' '{' ownedState+=State ("," ownedState+=State)* '}')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'ownedState'
		public Keyword getOwnedStateKeyword_3_0() { return cOwnedStateKeyword_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }
		
		//ownedState+=State
		public Assignment getOwnedStateAssignment_3_2() { return cOwnedStateAssignment_3_2; }
		
		//State
		public RuleCall getOwnedStateStateParserRuleCall_3_2_0() { return cOwnedStateStateParserRuleCall_3_2_0; }
		
		//("," ownedState+=State)*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//ownedState+=State
		public Assignment getOwnedStateAssignment_3_3_1() { return cOwnedStateAssignment_3_3_1; }
		
		//State
		public RuleCall getOwnedStateStateParserRuleCall_3_3_1_0() { return cOwnedStateStateParserRuleCall_3_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class StateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.fsm.FSM.State");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cInitialAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cInitialInitialKeyword_0_0 = (Keyword)cInitialAssignment_0.eContents().get(0);
		private final Assignment cFinalAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cFinalFinalKeyword_1_0 = (Keyword)cFinalAssignment_1.eContents().get(0);
		private final Keyword cStateKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cNameKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cNameAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_4_1_0 = (RuleCall)cNameAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cOutgoingTransitionKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cOutgoingTransitionAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cOutgoingTransitionTransitionParserRuleCall_5_2_0 = (RuleCall)cOutgoingTransitionAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cOutgoingTransitionAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cOutgoingTransitionTransitionParserRuleCall_5_3_1_0 = (RuleCall)cOutgoingTransitionAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//State:
		//	initial?='initial'?
		//	final?='final'?
		//	'State'
		//	'{' ('name' name=ID) ('outgoingTransition' '{' outgoingTransition+=Transition ("," outgoingTransition+=Transition)*
		//	'}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//initial?='initial'? final?='final'? 'State' '{' ('name' name=ID) ('outgoingTransition' '{'
		//outgoingTransition+=Transition ("," outgoingTransition+=Transition)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//initial?='initial'?
		public Assignment getInitialAssignment_0() { return cInitialAssignment_0; }
		
		//'initial'
		public Keyword getInitialInitialKeyword_0_0() { return cInitialInitialKeyword_0_0; }
		
		//final?='final'?
		public Assignment getFinalAssignment_1() { return cFinalAssignment_1; }
		
		//'final'
		public Keyword getFinalFinalKeyword_1_0() { return cFinalFinalKeyword_1_0; }
		
		//'State'
		public Keyword getStateKeyword_2() { return cStateKeyword_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//'name' name=ID
		public Group getGroup_4() { return cGroup_4; }
		
		//'name'
		public Keyword getNameKeyword_4_0() { return cNameKeyword_4_0; }
		
		//name=ID
		public Assignment getNameAssignment_4_1() { return cNameAssignment_4_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_4_1_0() { return cNameIDTerminalRuleCall_4_1_0; }
		
		//('outgoingTransition' '{' outgoingTransition+=Transition ("," outgoingTransition+=Transition)* '}')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'outgoingTransition'
		public Keyword getOutgoingTransitionKeyword_5_0() { return cOutgoingTransitionKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//outgoingTransition+=Transition
		public Assignment getOutgoingTransitionAssignment_5_2() { return cOutgoingTransitionAssignment_5_2; }
		
		//Transition
		public RuleCall getOutgoingTransitionTransitionParserRuleCall_5_2_0() { return cOutgoingTransitionTransitionParserRuleCall_5_2_0; }
		
		//("," outgoingTransition+=Transition)*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//outgoingTransition+=Transition
		public Assignment getOutgoingTransitionAssignment_5_3_1() { return cOutgoingTransitionAssignment_5_3_1; }
		
		//Transition
		public RuleCall getOutgoingTransitionTransitionParserRuleCall_5_3_1_0() { return cOutgoingTransitionTransitionParserRuleCall_5_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class TransitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.fsm.FSM.Transition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTransitionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cInputKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cInputAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cInputSTRINGTerminalRuleCall_2_1_0 = (RuleCall)cInputAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cOutputKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cOutputAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cOutputSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cOutputAssignment_3_1.eContents().get(0);
		private final Keyword cTargetKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cTargetAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cTargetStateCrossReference_5_0 = (CrossReference)cTargetAssignment_5.eContents().get(0);
		private final RuleCall cTargetStateIDTerminalRuleCall_5_0_1 = (RuleCall)cTargetStateCrossReference_5_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Transition:
		//	'Transition'
		//	'{' ('input' input=STRING)? ('output' output=STRING)?
		//	'target' target=[State]
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Transition' '{' ('input' input=STRING)? ('output' output=STRING)? 'target' target=[State] '}'
		public Group getGroup() { return cGroup; }
		
		//'Transition'
		public Keyword getTransitionKeyword_0() { return cTransitionKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//('input' input=STRING)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'input'
		public Keyword getInputKeyword_2_0() { return cInputKeyword_2_0; }
		
		//input=STRING
		public Assignment getInputAssignment_2_1() { return cInputAssignment_2_1; }
		
		//STRING
		public RuleCall getInputSTRINGTerminalRuleCall_2_1_0() { return cInputSTRINGTerminalRuleCall_2_1_0; }
		
		//('output' output=STRING)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'output'
		public Keyword getOutputKeyword_3_0() { return cOutputKeyword_3_0; }
		
		//output=STRING
		public Assignment getOutputAssignment_3_1() { return cOutputAssignment_3_1; }
		
		//STRING
		public RuleCall getOutputSTRINGTerminalRuleCall_3_1_0() { return cOutputSTRINGTerminalRuleCall_3_1_0; }
		
		//'target'
		public Keyword getTargetKeyword_4() { return cTargetKeyword_4; }
		
		//target=[State]
		public Assignment getTargetAssignment_5() { return cTargetAssignment_5; }
		
		//[State]
		public CrossReference getTargetStateCrossReference_5_0() { return cTargetStateCrossReference_5_0; }
		
		//ID
		public RuleCall getTargetStateIDTerminalRuleCall_5_0_1() { return cTargetStateIDTerminalRuleCall_5_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	
	
	private final FSMElements pFSM;
	private final StateElements pState;
	private final TransitionElements pTransition;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public FSMGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pFSM = new FSMElements();
		this.pState = new StateElements();
		this.pTransition = new TransitionElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.fsm.FSM".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//FSM:
	//	{FSM}
	//	'FSM'
	//	'{' ('ownedState' '{' ownedState+=State ("," ownedState+=State)* '}')?
	//	'}';
	public FSMElements getFSMAccess() {
		return pFSM;
	}
	
	public ParserRule getFSMRule() {
		return getFSMAccess().getRule();
	}
	
	//State:
	//	initial?='initial'?
	//	final?='final'?
	//	'State'
	//	'{' ('name' name=ID) ('outgoingTransition' '{' outgoingTransition+=Transition ("," outgoingTransition+=Transition)*
	//	'}')?
	//	'}';
	public StateElements getStateAccess() {
		return pState;
	}
	
	public ParserRule getStateRule() {
		return getStateAccess().getRule();
	}
	
	//Transition:
	//	'Transition'
	//	'{' ('input' input=STRING)? ('output' output=STRING)?
	//	'target' target=[State]
	//	'}';
	public TransitionElements getTransitionAccess() {
		return pTransition;
	}
	
	public ParserRule getTransitionRule() {
		return getTransitionAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
